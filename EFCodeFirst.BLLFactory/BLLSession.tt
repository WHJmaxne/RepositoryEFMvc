<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@
 output extension=".cs"#>
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using EFCodeFirst.IBLL;
using EFCodeFirst.BLL;
using System;
using System.Collections.Generic;
using System.Linq; 
using System.Text;
using System.Threading.Tasks; 

namespace EFCodeFirst.BLLFactory
{
	public partial class BLLSession : IBLLSession
    {
<#
// Emit Entity Types
	string [] classNames={"UserInfo","Department","Role","Permission","UserVipPermission","UserRole","RolePer"};
foreach (string className in classNames)
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=className#>BLL _<#=className#>BLL;
        public I<#=className#>BLL <#=className#>BLL
        {
            get
            {
                if(_<#=className#>BLL == null)
                {
				    _<#=className#>BLL =new <#=className#>BLL();
                }
                return _<#=className#>BLL;
            }
        }
<#}#>
	}	
}