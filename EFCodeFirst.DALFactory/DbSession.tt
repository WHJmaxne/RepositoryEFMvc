<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@
 output extension=".cs"#>
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);

string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using EFCodeFirst.DAL;
using EFCodeFirst.IDAL;
using System;
using System.Collections.Generic;
using System.Data.Entity;
using System.Linq; 
using System.Text;
using System.Threading.Tasks; 

namespace EFCodeFirst.DALFactory
{
	public partial class DBSession : IDBSession
    {
<#
// Emit Entity Types
	string [] classNames={"UserInfo","Department","Role","Permission","UserVipPermission","UserRole","RolePer","BillType","Supplier","TApply","TapplyBill","TapplySupplier"};
foreach (string className in classNames)
{
    //fileManager.StartNewFile(entity.Name + "RepositoryExt.cs");
    //BeginNamespace(namespaceName, code);    
#>	
		private I<#=className#>DAL _<#=className#>DAL;
        public I<#=className#>DAL <#=className#>DAL
        {
            get
            {
                if(_<#=className#>DAL == null)
                {
				    _<#=className#>DAL =AbstractFactory.Create<#=className#>DAL();
                }
                return _<#=className#>DAL;
            }
        }
<#}#>
	}	
}